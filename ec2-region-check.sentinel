// This Sentinel policy ensures that all AWS EC2 instances are deployed only in the 'us-east-1' region.
// It iterates through all planned resource changes and checks the 'aws_instance' resources.

// Import the tfplan/v2 import, which provides access to the Terraform plan.
import "tfplan/v2" as tfplan

// Define a rule to check the region of AWS EC2 instances.
ec2_region_check = rule {
    // Iterate over all resource changes in the Terraform plan.
    all tfplan.resource_changes as _, rc {
        // Check if the resource is an 'aws_instance' and if it is being created or updated.
        (rc.type is "aws_instance" and (rc.change.actions contains "create" or rc.change.actions contains "update")) else true

        // If it's an 'aws_instance' being created or updated, then check its region.
        // The 'address' attribute is used to get the full resource address (e.g., 'aws_instance.example').
        // The 'config.region' attribute is where the region for the instance is typically defined.
        // If the region is not explicitly set in the resource block, Terraform will use the provider's default region.
        // This policy assumes the region is either explicitly set or inherited by the provider configured for the instance.
        // If the region is not found, it defaults to an empty string to prevent false positives.
        rc.change.after.region is "us-east-1" or rc.change.after.region is undefined
    }
}

// The main rule that determines the policy's outcome.
// If ec2_region_check evaluates to true, the policy passes; otherwise, it denies.
main = rule {
    ec2_region_check
}

// Example of how to structure the policy to provide more detailed feedback on denial.
// You could also collect all non-compliant instances and list them in the denial message.
// For simplicity, this policy uses a direct denial based on the 'ec2_region_check' rule.

// To test this policy:
// 1. Save it as 'main.sentinel' in your Sentinel policy set.
// 2. Create a Terraform configuration with an 'aws_instance' resource.
// 3. Try setting the region to something other than 'us-east-1' to see the denial.
// 4. Set the region to 'us-east-1' or omit it (if your provider is us-east-1) to see it pass.